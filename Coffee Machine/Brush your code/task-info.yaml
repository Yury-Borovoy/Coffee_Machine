type: edu
custom_name: stage6
files:
- name: test/CoffeeMachineTest.java
  visible: false
  text: |
    import machine.CoffeeMachine;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.ArrayList;
    import java.util.List;


    class TestClue {
        int water;
        int milk;
        int beans;
        int cups;
        int money;
        String feedback;
        TestClue(int w, int m, int b, int c, int mo, String feedback) {
            water = w;
            milk = m;
            beans = b;
            cups = c;
            money = mo;
            this.feedback = feedback;
        }
    }

    public class CoffeeMachineTest extends BaseStageTest<TestClue> {

        public CoffeeMachineTest() {
            super(CoffeeMachine.class);
        }

        @Override
        public List<TestCase<TestClue>> generate() {
            return List.of(
                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        700 - 400,
                        390 - 540,
                        80 - 120 ,
                        7 - 9,
                        0 - 550,
                        "This test is exactly " +
                            "like in the example - try to run it by yourself"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "buy\n" +
                            "2\n" +
                            "fill\n" +
                            "1000\n" +
                            "0\n" +
                            "0\n" +
                            "0\n" +
                            "buy\n" +
                            "2\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        3000,
                        3000,
                        3000 ,
                        3000,
                        0,
                        "This test checks \"fill\" action"))
                    .setInput(
                        "remaining\n" +
                            "fill\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "3000\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -250,
                        0,
                        -16 ,
                        -1,
                        4, "This test checks \"buy\" " +
                        "action with the first variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "1\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -350,
                        -75,
                        -20 ,
                        -1,
                        7, "This test checks \"buy\" " +
                        "action with the second variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "2\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        -200,
                        -100,
                        -12 ,
                        -1,
                        6, "This test checks \"buy\" " +
                        "action with the third variant of coffee"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "3\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        -550, "This test checks \"take\" action"))
                    .setInput(
                        "remaining\n" +
                            "take\n" +
                            "remaining\n" +
                            "exit\n"),

                new TestCase<TestClue>()
                    .setAttach(new TestClue(
                        0,
                        0,
                        0 ,
                        0,
                        0, "This test checks \"back\" " +
                        "action right after \"buy\" action"))
                    .setInput(
                        "remaining\n" +
                            "buy\n" +
                            "back\n" +
                            "remaining\n" +
                            "exit\n")
            );
        }

        @Override
        public CheckResult check(String reply, TestClue clue) {
            String[] lines = reply.split("\\n");

            if (lines.length <= 1) {
                return CheckResult.FALSE;
            }

            int water_ = clue.water;
            int milk_ = clue.milk;
            int beans_ = clue.beans;
            int cups_ = clue.cups;
            int money_ = clue.money;

            List<Integer> milk = new ArrayList<>();
            List<Integer> water = new ArrayList<>();
            List<Integer> beans = new ArrayList<>();
            List<Integer> cups = new ArrayList<>();
            List<Integer> money = new ArrayList<>();

            for (String line : lines) {
                line = line.replace("$", "").trim();
                String[] words = line.split("\\s+");
                if (words.length == 0) {
                    continue;
                }
                String firstWord = words[0];
                int amount;
                try {
                    amount = Integer.parseInt(firstWord);
                }
                catch (Exception e) {
                    continue;
                }
                if (line.contains("milk")) {
                    milk.add(amount);
                }
                else if (line.contains("water")) {
                    water.add(amount);
                }
                else if (line.contains("beans")) {
                    beans.add(amount);
                }
                else if (line.contains("cups")) {
                    cups.add(amount);
                }
                else if (line.contains("money")) {
                    money.add(amount);
                }
            }

            int milk0 = milk.get(0);
            int milk1 = milk.get(milk.size() - 1);

            int water0 = water.get(0);
            int water1 = water.get(water.size() - 1);

            int beans0 = beans.get(0);
            int beans1 = beans.get(beans.size() - 1);

            int cups0 = cups.get(0);
            int cups1 = cups.get(cups.size() - 1);

            int money0 = money.get(0);
            int money1 = money.get(money.size() - 1);

            int diffWater = water1 - water0;
            int diffMilk = milk1 - milk0;
            int diffBeans = beans1 - beans0;
            int diffCups = cups1 - cups0;
            int diffMoney = money1 - money0;

            boolean isCorrect =
                diffWater == water_ &&
                    diffMilk == milk_ &&
                    diffBeans == beans_ &&
                    diffCups == cups_ &&
                    diffMoney == money_;

            return new CheckResult(isCorrect, clue.feedback);
        }
    }
  learner_created: false
- name: src/machine/CoffeeMachine.java
  visible: true
  text: |-
    package machine;
    import java.util.Scanner;
    public class CoffeeMachine {
        /*
        В массиве
        [0] - water;
        [1] - milk;
        [2] - beans;
        [3] - cups;
        [4] - money;
         */

        public static void buyCoffee(int [] cats) {
            System.out.println("What do you want to buy? 1 - espresso, 2 - latte, 3 - cappuccino, back - to main menu: ");
            Scanner scanner = new Scanner(System.in);
            String number6 = "back";
            String choiceNumber = scanner.nextLine();
            if (choiceNumber.equals(number6)) {
    return;
            }
            int choiceOfCoffee = Integer.parseInt(choiceNumber);
            if (choiceOfCoffee == 1) {
                if (cats[0] < 250) {
                    System.out.println("Sorry, not enough water! \n");
                } else if (cats[2] < 16) {
                    System.out.println("Sorry, not enough beans! \n");
                } else if (cats[3] == 0) {
                    System.out.println("Sorry, not enough cups! \n");
                } else {
                    cats[0] -= 250;
                    cats[2] -= 16;
                    cats[3] -= 1;
                    cats[4] += 4;

                    System.out.println("I have enough resources, making you a coffee! \n");
                }
            } else if (choiceOfCoffee == 2) {
                if (cats[0] < 350) {
                    System.out.println("Sorry, not enough water! \n");
                } else if (cats[1] < 75) {
                    System.out.println("Sorry, not enough milk! \n");
                } else if (cats[2] < 20) {
                    System.out.println("Sorry, not enough beans! \n");
                } else if (cats[3] == 0) {
                    System.out.println("Sorry, not enough cups! \n");
                } else {
                    cats[0] -= 350;
                    cats[1] -= 75;
                    cats[2] -= 20;
                    cats[3] -= 1;
                    cats[4] += 7;

                    System.out.println("I have enough resources, making you a coffee! \n");
                }
            } else if (choiceOfCoffee == 3) {
                if (cats[0] < 200) {
                    System.out.println("Sorry, not enough water! \n");
                } else if (cats[1] < 100) {
                    System.out.println("Sorry, not enough milk! \n");
                } else if (cats[2] < 12) {
                    System.out.println("Sorry, not enough beans! \n");
                } else if (cats[3] == 0) {
                    System.out.println("Sorry, not enough cups! \n");
                } else {
                    cats[0] -= 200;
                    cats[1] -= 100;
                    cats[2] -= 12;
                    cats[3] -= 1;
                    cats[4] += 6;

                    System.out.println("I have enough resources, making you a coffee! \n");
                }

            }

        }


        public static void fillCoffee(int [] cats){
            Scanner scanner = new Scanner(System.in);
            System.out.println("write how many ml of water do you want to add: ");
            String choiceWater = scanner.nextLine();
            int waterFill = Integer.parseInt (choiceWater);
            System.out.println("write how many ml of milk do you want to add: ");
            String choiceMilk = scanner.nextLine();
            int milkFill = Integer.parseInt (choiceMilk);
            System.out.println("write how many grams of coffee do you want to add: ");
            String choiceBeans = scanner.nextLine();
            int beansFill = Integer.parseInt (choiceBeans);
            System.out.println("write how many disposable cups of coffee do you want to add: ");
            String choiceCups = scanner.nextLine();
            int cupsFill = Integer.parseInt (choiceCups);
            cats[0] += waterFill;
            cats[1] += milkFill;
            cats[2] += beansFill;
            cats[3] += cupsFill;

        }

        public static void takeCoffee(int [] cats){
            System.out.println(" I gave you $" + cats[4]);
            cats[4] -= cats[4];
        }



        public static void main(String[] args){
            Scanner scanner = new Scanner(System.in);
            int [] cats = {400, 540, 120, 9, 550};
            String number1 = "buy";
            String number2 = "fill";
            String number3 = "take";
            String number4 = "remaining";
            String number5 = "exit";

            boolean exit = true;
            while (exit == true) {

                System.out.println("Write action (buy, fill, take, remaining, exit): ");
                String choice = scanner.nextLine();
                if (choice.equals(number1)) {
                    buyCoffee(cats);
                } else if (choice.equals(number2)) {
                    fillCoffee(cats);
                } else if (choice.equals(number3)) {
                    takeCoffee(cats);
                } else if (choice.equals(number4)){
                    System.out.println("The coffee machine has:");
                    System.out.println(cats[0] + " of water");
                    System.out.println(cats[1] + " of milk");
                    System.out.println(cats[2] + " of coffee beans");
                    System.out.println(cats[3] + " of disposable cups");
                    System.out.println(cats[4] + " of money");
                }else if(choice.equals(number5)){
                    exit = false;
                }
            }
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/33/stages/180/implement
status: Solved
record: 2
